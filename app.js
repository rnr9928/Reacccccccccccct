// 리덕스란?

//  리엑트에서 사용할 수 있는 하나의 라이브러리

//  리엑트는 자식 컴포넌트에 props로 전달은 가능한데
//  다른 컴포넌트에서 직접 데이터 공유가 불가능
//  그래서 공유해야할 데이터를 공유받는 자식 컴포넌트들의 공통부모에서 State를 만들어서
//  자식 컴포넌트에게 전달해주는데 리엑트는 데이터의 흐름이 단방향이기 때문에
// 작업을 하다보면 부모 컴포넌트에 무척 많은 props가 생기는데 이런 단점을 보완하기 위해

//  리덕스 동작 구조

// 값을 저장하는 구조는
// useDispatch 리엑트 훅 함수
// 컴포넌트 -> useDispatch -> Action -> Reducer  -> store
// 컴포넌트가 Action을 보내고 reducer로 전달받고 store의 값을 최신화 해준다.
// Action은 동작할 기능의 이름 행동
// Reducer는 함수인데 내가 사용할 동작들을 조건문으로 모아둔곳
// 컴포넌트가 무엇을 동작할지 Action 행동을 무엇을 할지를 Reducer로 보내고 store의 값을 바꿔준다.....

// 값을 가져오는 구조는
// useSelector 리엑트 훅 함수
// store -> useSelector -> 컴포넌트
// useSelector는 store에 있는 값을 가져올때 사용하는 함수

// 리덕스를 시작해보자
// npm install redux


// redux 리엑트에서만 쓸 수 있는게 아니라 리엑트도 사용할 수 있다....!>>!@>!@>!@
//  npm install react-redux

// Provider 컴포넌트이고 이 컴포넌트로 감싸준 컴포넌트를 리덕스 저장소의 사용을 가능학 만들어준다
//  이 컴포넌트는 props로 store(저장소)를 전달 받는다.